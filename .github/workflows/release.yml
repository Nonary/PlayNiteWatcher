name: Update Release and Upload Zip

on:
  push:
    branches: ['fullscreen_rework']

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      tag: fullscreen
    permissions: 
      contents: write
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Edit Release
      uses: actions/github-script@v5
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs');
          const tag = "${{env.tag}}";
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          const releases = await github.rest.repos.listReleases({
            owner,
            repo,
          });

          const release = releases.data.find((release) => release.tag_name === tag);


          if(!release) {
            console.log(`Release with tag ${tag} not found`);
            return;
          }
          
          const body = fs.readFileSync('readme.md', 'utf8');

          await github.rest.repos.updateRelease({
            owner,
            repo,
            release_id: release.id,
            body,
          });
    - name: Zip the repository
      run: |
        rsync -a --exclude='.*' ${{github.workspace}} ${{github.workspace}}/PlayniteWatcher
        zip -r PlayniteWatcher.zip ${{github.workspace}}/PlayniteWatcher

    - name: Upload zip to the release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: https://github.com/${{ github.repository }}/releases/tag/{{env.tag}}
        asset_name: PlayniteWatcher.zip
        asset_path: ${{github.workspace}}/PlayniteWatcher.zip
        asset_content_type: application/zip

    - name: Force update the tag
      uses: actions/github-script@v5
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;

          await github.git.updateRef({
            owner,
            repo,
            ref: `tags/${{env.tag}}`,
            sha: context.sha,
            force: true
          });
